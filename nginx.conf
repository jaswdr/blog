user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Load brotli module
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression (CloudFlare will handle final compression)
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli compression (fallback if CloudFlare doesn't compress)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        image/svg+xml;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # CloudFlare optimized cache headers
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # CloudFlare will cache these for 1 year, browser for 1 year
            add_header CF-Cache-Tag "static-assets";
        }

        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # CloudFlare will cache images for 1 year
            add_header CF-Cache-Tag "images";
        }

        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            
            # Font files cached for 1 year
            add_header CF-Cache-Tag "fonts";
        }

        # HTML files - short cache to allow for updates
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            add_header Vary "Accept-Encoding";
            
            # CloudFlare caches for 4 hours, browser for 1 hour
            add_header CF-Cache-Tag "html";
        }

        # RSS and JSON feeds
        location ~* \.(xml|json)$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            add_header Vary "Accept-Encoding";
            
            add_header CF-Cache-Tag "feeds";
        }

        # Main location block
        location / {
            try_files $uri $uri/ $uri.html =404;
            
            # Default cache for other files
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            add_header Vary "Accept-Encoding";
        }

        # Sitemap and robots.txt
        location ~* ^/(sitemap\.xml|robots\.txt)$ {
            expires 1d;
            add_header Cache-Control "public, max-age=86400";
        }

        # 404 error page
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # Security: deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup files
        location ~* \.(bak|old|tmp|temp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}